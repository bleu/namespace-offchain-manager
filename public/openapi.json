{
  "openapi": "3.0.3",
  "info": {
    "title": "Subnames API",
    "version": "1.0.0",
    "description": "API to manage subnames, subscription packs, and related data."
  },
  "paths": {
    "/api/subnames/{id}": {
      "get": {
        "summary": "Get Subname by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subname.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subname retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubnameResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "ID is required."
          },
          "404": {
            "description": "Subname not found."
          },
          "401": {
            "description": "Unauthorized. Bearer token is missing or invalid."
          },
          "500": {
            "description": "Error fetching subname."
          }
        }
      },
      "put": {
        "summary": "Update Subname",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subname.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Updated subname data.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubnameDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subname updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubnameResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Validation error or ID is required."
          },
          "404": {
            "description": "Subname not found."
          },
          "401": {
            "description": "Unauthorized. Bearer token is missing or invalid."
          },
          "500": {
            "description": "Error updating subname."
          }
        }
      },
      "delete": {
        "summary": "Delete Subname",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the subname.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Subname deleted successfully."
          },
          "404": {
            "description": "Subname not found."
          },
          "401": {
            "description": "Unauthorized. Bearer token is missing or invalid."
          },
          "500": {
            "description": "Error deleting subname."
          }
        }
      }
    },
    "/api/subnames/new": {
      "post": {
        "summary": "Create New Subname",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Data to create a new subname.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubnameDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subname created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubnameResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Validation error."
          },
          "409": {
            "description": "Subname already exists."
          },
          "401": {
            "description": "Unauthorized. Bearer token is missing or invalid."
          },
          "500": {
            "description": "Error creating subname."
          }
        }
      }
    },
    "/api/subnames": {
      "get": {
        "summary": "Get All Subnames",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results per page.",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "parentNames",
            "in": "query",
            "description": "Comma-separated list of parent names.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of subnames retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Bearer token is missing or invalid."
          },
          "500": {
            "description": "Error fetching subnames."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SubnameResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the subname."
          },
          "parentName": {
            "type": "string",
            "description": "Parent name of the subname."
          },
          "label": {
            "type": "string",
            "description": "Label of the subname."
          },
          "name": {
            "type": "string",
            "description": "Full name of the subname."
          },
          "contenthash": {
            "type": "string",
            "nullable": true,
            "description": "Content hash of the subname."
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubnameTextResponseDTO"
            }
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubnameAddressResponseDTO"
            }
          },
          "subscriptionPack": {
            "$ref": "#/components/schemas/SubscriptionPackResponseDTO"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp."
          }
        }
      },
      "CreateSubnameDTO": {
        "type": "object",
        "required": ["parentName", "label"],
        "properties": {
          "parentName": {
            "type": "string",
            "description": "Parent name of the subname."
          },
          "label": {
            "type": "string",
            "description": "Label for the subname."
          },
          "contenthash": {
            "type": "string",
            "nullable": true,
            "description": "Optional content hash."
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubnameTextResponseDTO"
            }
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubnameAddressResponseDTO"
            }
          },
          "subscriptionPackId": {
            "type": "string",
            "description": "ID of the associated subscription pack."
          }
        }
      },
      "UpdateSubnameDTO": {
        "type": "object",
        "properties": {
          "contenthash": {
            "type": "string",
            "nullable": true,
            "description": "Updated content hash."
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubnameTextResponseDTO"
            }
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubnameAddressResponseDTO"
            }
          }
        }
      },
      "SubnameTextResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the text (Should be blank for new text).",
            "nullable": true
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "SubnameAddressResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the address (Should be blank for new).",
            "nullable": true
          },
          "coin": {
            "type": "integer"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "SubscriptionPackResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "duration": {
            "type": "integer"
          },
          "maxSubnames": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubnameResponseDTO"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "hasMore": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
